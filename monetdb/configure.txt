`configure' configures MonetDB 11.23.7 to adapt to many kinds of systems.

Usage: ./configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking ...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [/usr/local]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, `make install' will install all the files in
`/usr/local/bin', `/usr/local/lib' etc.  You can specify
an installation prefix other than `/usr/local' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root [DATAROOTDIR/doc/MonetDB]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]

Program names:
  --program-prefix=PREFIX            prepend PREFIX to installed program names
  --program-suffix=SUFFIX            append SUFFIX to installed program names
  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
  --target=TARGET   configure for building compilers for TARGET [HOST]

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-silent-rules   less verbose build output (undo: "make V=1")
  --disable-silent-rules  verbose build output (undo: "make V=0")
  --enable-gdk            enable support for GDK (default=yes)
  --enable-monetdb5       enable support for MonetDB5 (default=yes)
  --enable-fits           enable support for FITS (default=auto)
  --enable-netcdf         enable support for netcdf (default=auto)
  --enable-lidar          enable support for LiDAR data (default=auto)
  --enable-sql            enable support for MonetDB/SQL (default=yes)
  --enable-geom           enable support for geom module (default=auto)
  --enable-shp            enable support for ESRI Shapefiles (default=auto)
  --enable-mapi           Enable MAPI (default=yes)
  --enable-embedded       enable support for running MonetDB as a library
                          (default=no)
  --enable-embedded-r     enable support for running MonetDB as a library for
                          R (default=no)
  --enable-microhttpd     enable support for the builtin MircoHTTPD daemon
  --enable-gsl            enable support for GSL (default=auto)
  --enable-rintegration   enable support for R integration into MonetDB
                          (default=auto)
  --enable-odbc           compile the MonetDB ODBC driver (default=auto)
  --enable-testing        enable support for testing (default=auto)
  --enable-developer      enable support for MonetDB development (default=yes
                          for development sources)
  --enable-sanitizer      enable support for the GCC address sanitizer
                          (default=no)
  --enable-console        enables direct console on the server (involves
                          security risks) (default=yes)
  --enable-jdbc           build the MonetDB JDBC driver
  --enable-merocontrol    build the Merovingian control driver
  --enable-static-analysis
                          configure for static code analysis (use only if you
                          know what you are doing)
  --enable-static[=PKGS]  build static libraries [default=no]
  --enable-shared[=PKGS]  build shared libraries [default=yes]
  --enable-dependency-tracking
                          do not reject slow dependency extractors
  --disable-dependency-tracking
                          speeds up one-time build
  --disable-largefile     omit support for large files
  --enable-oid32          use 32 bits for OIDs on a 64-bit architecture
  --enable-strict         enable strict compiler flags (default=yes for
                          development sources)
  --enable-fast-install[=PKGS]
                          optimize for fast installation [default=yes]
  --disable-libtool-lock  avoid locking (might break parallel builds)
  --enable-debug          enable full debugging (default=yes for development
                          sources)
  --enable-assert         enable assertions in the code (default=yes for
                          development sources)
  --enable-optimize       enable extra optimization (default=no)
  --enable-profile        enable profiling (default=no)
  --enable-instrument     enable instrument (default=no)
  --disable-rpath         do not hardcode runtime library paths
  --enable-int128         enable support for 128-bit integers (default=auto)

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-password-backend=HASHALG
                          password hash algorithm, one of MD5, SHA1,
                          RIPEMD160, SHA224, SHA256, SHA384, SHA512, defaults
                          to SHA512
  --with-logdir=DIR       Where to put log files (LOCALSTATEDIR/log/monetdb/)
  --with-rundir=DIR       Where to put pid files (LOCALSTATEDIR/run/monetdb/)
  --with-pic[=PKGS]       try to use only PIC/non-PIC objects [default=use
                          both]
  --with-aix-soname=aix|svr4|both
                          shared library versioning (aka "SONAME") variant to
                          provide on AIX, [default=aix].
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-sysroot[=DIR]    Search for dependent libraries within DIR (or the
                          compiler's sysroot if not specified).
  --with-translatepath=PROG
                          program to translate paths from configure-time
                          format to execute-time format. Take care that this
                          program can be given paths like ${prefix}/etc which
                          should be translated carefully.
  --with-anttranslatepath=PROG
                          program to translate paths from configure-time
                          format to a format that can be given to the ant
                          program (default: 'readlink -f' or value for
                          --with-translatepath)
  --with-perl=FILE        perl is installed as FILE
  --with-perl-libdir=DIR  relative path for Perl library directory (where Perl
                          modules should be installed)
  --with-python2=FILE     python2 is installed as FILE
  --with-python3=FILE     python3 is installed as FILE
  --with-python2-libdir=DIR
                          relative path for Python 2 library directory (where
                          Python 2 modules should be installed)
  --with-python3-libdir=DIR
                          relative path for Python 3 library directory (where
                          Python 3 modules should be installed)
  --with-ant=FILE         ant is installed as FILE
  --with-java=DIR         java, javac, jar and javadoc are installed in
                          DIR/bin
  --with-bz2=DIR          bz2 library is installed in DIR
  --with-pthread=DIR      pthread library is installed in DIR
  --with-readline=DIR     readline library is installed in DIR
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-libiconv-prefix[=DIR]  search for libiconv in DIR/include and DIR/lib
  --without-libiconv-prefix     don't search for libiconv in includedir and libdir
  --with-uuid             include UUID support (default=yes)
  --with-openssl          include OpenSSL support (default=yes)
  --with-libxml2          include libxml2 support (default=yes)
  --with-curl             include cURL support (default=yes)
  --with-lzma             include lzma support (default=yes)
  --with-valgrind         include valgrind support (default=no)
  --with-sphinxclient=DIR sphinxclient library is installed in DIR
  --with-unixodbc=DIR     unixODBC library is installed in DIR
  --with-proj=DIR         proj library is installed in DIR
  --with-samtools=DIR     samtools (providing bam library) are installed in
                          DIR
  --with-geos=DIR         geos library is installed in DIR
  --with-liblas=DIR       liblas library is installed in DIR
  --with-gdal=DIR         gdal library is installed in DIR

Some influential environment variables:
  PKG_CONFIG  path to pkg-config utility
  PKG_CONFIG_PATH
              directories to add to pkg-config's search path
  PKG_CONFIG_LIBDIR
              path overriding pkg-config's built-in search path
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CPP         C preprocessor
  LT_SYS_LIBRARY_PATH
              User-defined run-time library search path.
  YACC        The `Yet Another Compiler Compiler' implementation to use.
              Defaults to the first program found out of: `bison -y', `byacc',
              `yacc'.
  YFLAGS      The list of arguments that will be passed by default to $YACC.
              This script will default YFLAGS to the empty string to avoid a
              default value of `-d' given by some make applications.
  openssl_CFLAGS
              C compiler flags for openssl, overriding pkg-config
  openssl_LIBS
              linker flags for openssl, overriding pkg-config
  pcre_CFLAGS C compiler flags for pcre, overriding pkg-config
  pcre_LIBS   linker flags for pcre, overriding pkg-config
  libxml2_CFLAGS
              C compiler flags for libxml2, overriding pkg-config
  libxml2_LIBS
              linker flags for libxml2, overriding pkg-config
  curl_CFLAGS C compiler flags for curl, overriding pkg-config
  curl_LIBS   linker flags for curl, overriding pkg-config
  zlib_CFLAGS C compiler flags for zlib, overriding pkg-config
  zlib_LIBS   linker flags for zlib, overriding pkg-config
  liblzma_CFLAGS
              C compiler flags for liblzma, overriding pkg-config
  liblzma_LIBS
              linker flags for liblzma, overriding pkg-config
  valgrind_CFLAGS
              C compiler flags for valgrind, overriding pkg-config
  valgrind_LIBS
              linker flags for valgrind, overriding pkg-config
  cfitsio_CFLAGS
              C compiler flags for cfitsio, overriding pkg-config
  cfitsio_LIBS
              linker flags for cfitsio, overriding pkg-config
  netcdf_CFLAGS
              C compiler flags for netcdf, overriding pkg-config
  netcdf_LIBS linker flags for netcdf, overriding pkg-config
  GDAL_CFLAGS C compiler flags for GDAL, overriding pkg-config
  GDAL_LIBS   linker flags for GDAL, overriding pkg-config
  atomic_ops_CFLAGS
              C compiler flags for atomic_ops, overriding pkg-config
  atomic_ops_LIBS
              linker flags for atomic_ops, overriding pkg-config
  libmicrohttpd_CFLAGS
              C compiler flags for libmicrohttpd, overriding pkg-config
  libmicrohttpd_LIBS
              linker flags for libmicrohttpd, overriding pkg-config
  gsl_CFLAGS  C compiler flags for gsl, overriding pkg-config
  gsl_LIBS    linker flags for gsl, overriding pkg-config

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to <info@monetdb.org>.
MonetDB home page: <http://www.monetdb.org/>.
